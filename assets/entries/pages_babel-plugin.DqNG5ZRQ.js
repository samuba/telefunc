import{j as e,o as i,i as n}from"../chunks/chunk-DVxHTYLE.js";import{L as r}from"../chunks/chunk-CesYGnt1.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-3ulBLjzN.js";/* empty css                      */const l=[];function o(a){const t={a:"a",li:"li",p:"p",ul:"ul",...a.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Telefunc's ",e.jsx(t.a,{href:"https://babeljs.io",children:"Babel"})," plugin adds the ",e.jsx(r,{text:"Telefunc Transformer",href:"/transformer"})," to Babel apps, such as:"]}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[`
`,e.jsx(r,{href:"/react-native"}),`
`]}),`
`]})]})}function d(a={}){const{wrapper:t}=a.components||{};return t?e.jsx(t,{...a,children:e.jsx(o,{...a})}):o(a)}const s=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:l},Symbol.toStringTag,{value:"Module"})),v={clientEntryLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:n}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/babel-plugin/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:s}}};export{v as configValuesSerialized};
