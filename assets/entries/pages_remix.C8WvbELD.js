import{j as e,a as r,L as a,o as n,i as l}from"../chunks/chunk-CB4fpONz.js";import"../chunks/chunk-BenMmNNg.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */function s({repo:o,timestamp:t}){return e.jsxs(e.Fragment,{children:[e.jsx(d,{children:t})," ",e.jsx(p,{children:o})]})}function d({children:o}){return e.jsx("span",{style:{background:"white",fontSize:"1.13em",fontWeight:"bold",fontFamily:"monospace",marginRight:2},children:o})}function p({children:o}){const t=o;return r(t),r(t.split("/").length===2),e.jsxs("a",{href:"https://github.com/"+t,children:["GitHub > ",e.jsx("code",{children:t})]})}const u=[];function i(o){const t={a:"a",li:"li",p:"p",ul:"ul",...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:["Example of using Telefunc with ",e.jsx(t.a,{href:"https://remix.run/",children:"Remix"}),":"]}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[`
`,e.jsx(s,{timestamp:"06.2024",repo:"overshom/remix-telefunc-demo"}),`
`]}),`
`]})]})}function h(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const c=Object.freeze(Object.defineProperty({__proto__:null,default:h,pageSectionsExport:u},Symbol.toStringTag,{value:"Module"})),g={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},NavHeader:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+NavHeader.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:l}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/remix/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:c}}};export{g as configValuesSerialized};
