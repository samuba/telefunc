import{a as p,c as f,d as g,j as r,R as L,u as P,p as m,e as x}from"./chunk-st3qvgMA.js";import{p as c}from"./chunk-3ulBLjzN.js";function F(t){t=t.toLowerCase(),t=T(t);const n=t.split(/[^a-z0-9\u4E00-\u9FA5]+/).filter(Boolean).join("-");return n===""?null:n}function T(t){return t.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}function b(t){return p(t.includes("#"),{urlWithHash:t}),t.split("#")[1].split("-").map((e,s)=>s===0?D(e):e).join(" ")}function D(t){return t[0].toUpperCase()+t.slice(1)}function y({href:t,text:n,noBreadcrumb:i,doNotInferSectionTitle:e,children:s}){if(f(t.startsWith("/")||t.startsWith("#"),`<Link href /> prop \`href==='${t}'\` but should start with '/' or '#'`),f(!n||!s,"Cannot use both `text` or `children`"),g(t))return r.jsx(L,{path:t,text:n});{const u=P();return r.jsx("a",{href:t,children:s||n||R({href:t,noBreadcrumb:i,pageContext:u,doNotInferSectionTitle:e})})}}function R({href:t,noBreadcrumb:n,pageContext:i,doNotInferSectionTitle:e}){const{hrefPathname:s,hrefHash:u}=$(t),a=j(s||i.urlPathname,i),h=a.url===i.urlPathname;s||p(h);const d=[];if(a.linkBreadcrumb&&d.push(...(a.linkBreadcrumb??[]).slice().reverse().map(m)),d.push(m(a.title)),u){let o;if(p(!u.startsWith("#")),h){const l=j(`#${u}`,i);o=m(l.title)}else"sectionTitles"in a&&a.sectionTitles&&a.sectionTitles.forEach(l=>{F(l)===u&&(o=m(l))});o||(f(!e,`Page section title not found for <Link href="\`${t}\`" doNotInferSectionTitle={true} />.`),o=r.jsx(r.Fragment,{children:b(t)})),d.push(o)}return n||h?d[d.length-1]:r.jsx(r.Fragment,{children:d.map((o,l)=>{const k=l===0?r.jsx(r.Fragment,{}):" > ";return r.jsxs(x.Fragment,{children:[k,o]},l)})})}function j(t,n){p(t.startsWith("/")||t.startsWith("#"));const{linksAll:i}=n,e=i.find(({url:s})=>t===s);return t.startsWith("#")?f(e,`Couldn't find ${t} in ${n.urlPathname}, does it exist?`):f(e,[`Couldn't find page with URL ${c.bold(t)}`,"â€” did you define it in",[c.cyan("docpress.config.js"),c.dim("#{"),c.cyan("headings"),c.dim(","),c.cyan("headingsDetached"),c.dim("}"),"?"].join("")].join(" ")),e}function $(t){let n=null,i=null;if(!t.includes("#"))i=t;else{const[e,...s]=t.split("#");e&&(i=e),n=s.join("#")}return p(i!==null||n!==null),p(i||n),{hrefPathname:i,hrefHash:n}}export{y as L};
